# This is a basic workflow to create, configure and deploy artefacts and resources
# for the PPE Inventory project in the DEMO environment

name: CI/CD Demo

on:
  push:
    branches: [ master ]

env:
  # In this pipeline some of the values that are secrets in the other pipelines are expanded in the clear to help you set up your own environment.
  # These values are public in REAME.md. Other values should be relatively simple to reproduce. 
  # NB the deployment service account key needs to be Base-64 encoded (see https://github.com/GoogleCloudPlatform/github-actions/tree/master/setup-gcloud).
  ENVIRONMENT: 'DEMO'
  SA_KEY: ${{ secrets.DEMO_SA_KEY }}
  PROJECT_ID: ppe-inventory-demo
  BUCKET_NAME: ppe-inventory-demo
  DOMAIN: "europe-west2-ppe-inventory-demo.cloudfunctions.net"
  PORTAL: https://ppe-inventory-demo-mf2rj3t7eq-ew.a.run.app
  APP_SECRET_KEY: ${{ secrets.DEMO_APP_SECRET_KEY }}
  SECRET_KEY: ${{ secrets.DEMO_SECRET_KEY }}
  OPTIONS: "--region=europe-west2 --memory=256MB --allow-unauthenticated"
  SHEET_ID: "1csuprj90P3EutWy05lcKsfl2QDTtNQhz0Jj97oum0jQ"
  COMMUNITY_SHEET_ID: "1NIoqxTiiqi2p2zXGDIu1jMAeoni-jL4SWJ3zlidfdw8"
  WORKSHEET_NAME: "Status"
  VALID_PROVIDER_NAME: ${{ secrets.VALID_PROVIDER_NAME }}
  VALID_PROVIDER_CODE: ${{ secrets.VALID_PROVIDER_CODE }}
  USER_NAME: demo 
  PASSWORD: password

jobs:

  confirm-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo YOU ARE ON ${{ github.ref }} BRANCH
      - run: env

  gcp-setup:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploying to ${{ env.ENVIRONMENT }} environment"
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Enable cloud functions api
      - name: Enable API services
        run: |
          gcloud services enable cloudfunctions.googleapis.com
          gcloud services enable sheets.googleapis.com
          gcloud services enable cloudbuild.googleapis.com
          gcloud services enable run.googleapis.com
      # Configure pubsub topics
      - name: Setup pubsub topics
        run: gcloud pubsub topics describe form-submissions || gcloud pubsub topics create form-submissions
      # Copy static files
      - name: Copy asset files to bucket and config access
        run: |
          gsutil rsync -r static gs://${{ env.BUCKET_NAME }}
          gsutil iam ch allUsers:objectViewer gs://${{ env.BUCKET_NAME }}

  deploy-form-function:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ env.SA_EMAIL }}
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Deploy form function
      - name: Deploy form function
        run: |
          cd form
          gcloud functions deploy form --runtime=python37 --trigger-http --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},DOMAIN=${{ env.DOMAIN }},BUCKET_NAME=${{ env.BUCKET_NAME }} ${{ env.OPTIONS }}
          gcloud functions describe form --region=europe-west2 | grep url

  deploy-register-function:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ env.SA_EMAIL }}
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Deploy register function
      - name: Deploy register function
        run: |
          cd register
          gcloud functions deploy register --runtime=python37 --trigger-http --set-env-vars=PORTAL=${{ env.PORTAL }},DOMAIN=${{ env.DOMAIN }},BUCKET_NAME=${{ env.BUCKET_NAME }} ${{ env.OPTIONS }}
          gcloud functions describe register --region=europe-west2 | grep url

  deploy-sheets-function:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ env.SA_EMAIL }}
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Deploy sheets function
      - name: Deploy sheets function
        run: |
          cd sheets
          gcloud functions deploy sheets --runtime=python37 --trigger-topic=form-submissions --max-instances=1 --set-env-vars=COMMUNITY_SHEET_ID=${{ env.COMMUNITY_SHEET_ID }},SHEET_ID=${{ env.SHEET_ID }},WORKSHEET_NAME=${{ env.WORKSHEET_NAME }},BUCKET_NAME=${{ env.BUCKET_NAME }} ${{ env.OPTIONS }}
          gcloud functions describe form --region=europe-west2 | grep url

  deploy-barts-function:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ env.SA_EMAIL }}
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Deploy barts function
      - name: Deploy barts function
        run: |
          cd barts
          gcloud functions deploy barts --runtime=python37 --trigger-http --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},DOMAIN=${{ env.DOMAIN }},BUCKET_NAME=${{ env.BUCKET_NAME }} ${{ env.OPTIONS }}
          gcloud functions describe barts --region=europe-west2 | grep url

  deploy-dashboard-function:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '286.0.0'
        service_account_email: ${{ env.SA_EMAIL }}
        service_account_key: ${{ env.SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true
    # Deploy dashboard function
    - name: Deploy dashboard function
      run: |
        cd dashboard
        gcloud functions deploy dashboard --runtime=python37 --trigger-http --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},DOMAIN=${{ env.DOMAIN }} ${{ env.OPTIONS }}
        gcloud functions describe dashboard --region=europe-west2 | grep url

  deploy-search-function:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ env.SA_EMAIL }}
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Deploy search function
      - name: Deploy search function
        run: |
          cd search
          gcloud functions deploy search --runtime=python37 --trigger-http --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},DOMAIN=${{ env.DOMAIN }},BUCKET_NAME=${{ env.BUCKET_NAME }} ${{ env.OPTIONS }}
          gcloud functions describe search --region=europe-west2 | grep url

  deploy-portal:
    needs: gcp-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ env.SA_EMAIL }}
          service_account_key: ${{ env.SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Deploy portal
      - name: Deploy portal
        run: |
          cd server
          gcloud info
          gcloud builds submit --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.PROJECT_ID }}
          gcloud run deploy ${{ env.PROJECT_ID }} --image gcr.io/${{ env.PROJECT_ID }}/${{ env.PROJECT_ID }} --platform managed --region europe-west1 --allow-unauthenticated --update-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},USER_NAME=${{ env.USER_NAME }},PASSWORD=${{ env.PASSWORD }},APP_SECRET_KEY=${{ env.APP_SECRET_KEY }},SECRET_KEY=${{ env.SECRET_KEY }}
      # NB For portal, you'll need to add the following variables to the deployment using
      # "Edit and deploy new revision" in Cloud Run 
      # (the values below are examples to help you get the format right)
      # OIDC_COOKIE_SECURE=False
      # OIDC_CALLBACK_ROUTE=/oidc/callback
      # OKTA_ORG_URL=https://demo-123456.okta.com
      # OKTA_AUTH_TOKEN=AbCdefGHijKlMnoPQ1234567890
      # OKTA_CLIENT_ID=Abc123
      # OIDC_AUTH_URI=https://demo-123456.okta.com/oauth2/default/v1/authorize
      # OKTA_CLIENT_SECRET=AbCdefGHijKlMnoPQ1234567890
      # OIDC_ISSUER=https://demo-123456.okta.com//oauth2/default
      # OIDC_REDIRECT_URIS=[https://ppe-inventory-demo-mf2rj3t7eq-ew.a.run.app/oidc/callback]
      # OIDC_TOKEN_URI=https://demo-123456.okta.com/oauth2/default/v1/token
      # OIDC_USERINFO_URI=https://demo-123456.okta.com/oauth2/default/userinfo

  tests:
    needs: [deploy-form-function, deploy-register-function, deploy-sheets-function, deploy-barts-function, deploy-dashboard-function, deploy-search-function, deploy-portal]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install behave
          pip install selenium
          pip install google-cloud-storage
          pip install google-cloud-datastore
          pip install pandas
      - name: Run the tests
        run: behave --tags=@pipeline,~@manual