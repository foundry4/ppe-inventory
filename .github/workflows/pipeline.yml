# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ feature/pipeline-setup ]
  pull_request:
    branches: [ feature/pipeline-setup ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Install PyOpenSSL
    - name: Install PyOpenSSL and set env var
      env:
        CLOUDSDK_PYTHON_SITEPACKAGES: "1"
      run: pip install pyopenssl

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '286.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.STAGING_GCP_PROJECT_ID }}
        export_default_credentials: true

    # Check if gcloud is good to go
    - run: gcloud info

    # Enable cloud functions api
    - run: gcloud services enable cloudfunctions.googleapis.com

    # Enable sheets api
    - run: gcloud services enable sheets.googleapis.com

    # form-submissions
    - run: gcloud pubsub topics describe form-submissions || gcloud pubsub topics create form-submissions

    # Copy static files
    - run: gsutil rsync -r static gs://ppe-inventory-test

    # Set bucket/object permissions
    - run: gsutil iam ch allUsers:objectViewer gs://ppe-inventory-test

    # Deploy form
    - name: Deploy form
      env:
        PROJECT_ID: ${{ secrets.STAGING_GCP_PROJECT_ID }}
        DOMAIN: "europe-west2-${{ secrets.STAGING_GCP_PROJECT_ID }}.cloudfunctions.net"
      run: echo ${{ env.PROJECT_ID }}

    - run: echo ${{ env.DOMAIN }}

    - run: pwd

    - run: cd form

    - run: pwd

    - run: gcloud functions deploy form --runtime=python37 --trigger-http --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},DOMAIN=${{ env.DOMAIN }}

